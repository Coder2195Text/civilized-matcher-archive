import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import Router from "next/router";
import Link from "next/link";
import { useState } from "react";
import Image from "next/image";
import Button from "react-bootstrap/Button";

export default function Dashboard() {
  const { status, data } = useSession();
  const [deleting, setDeleting] = useState(false);
  if (status == "unauthenticated") {
    Router.push("/");
    return <></>;
  }
  return (
    <>
      <Head>
        <title>Matchmaking - Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Dashboard</h1>
      <div className="row g-0 w-100">
        <hr className="d-block d-md-none" />
        <span className="col-12 col-md-6">
          <h4>Tutorial</h4>
          <Link href="/tutorial" className="link-primary">
            Tutorial for newcomers or for refresher purposes
          </Link>
          <br />
          We wont answer any questions you have unless you watched the tutorial.
          <br />
          <b>Note: </b>Tutorial was made in old versions of the site, but the
          concepts are still the same
        </span>
        <hr className="d-block d-md-none" />
        <span className="col-12 col-md-6">
          <h4>Matchmaking Actions</h4>
          <Link href="/form" className="link-primary">
            Create/Edit Form
          </Link>
          <br />
          <Link href="/match" className="link-primary">
            Matchmake yourself (Find your match)
          </Link>
        </span>
      </div>
      <hr />
      <div className="row g-0 w-100">
        <h4>Are you a cupid guiding lazy people to their matches?</h4>
        <br />
        <div>
          If so, go{" "}
          <Link href="/cupidMatch" className="link-primary">
            HERE!
          </Link>
          <br />
        </div>
      </div>
      <hr />
      <h4>
        Logged in as {data?.user?.name}{" "}
        <Image
          src={data?.user?.image || ""}
          alt=""
          width={50}
          height={50}
          className="rounded-circle"
        />
      </h4>
      <div className="w-100 text-center d-flex justify-content-around pb-3">
        <Button
          variant="primary"
          onClick={() => {
            signOut();
          }}
        >
          Logout
        </Button>
        <Button
          variant="danger"
          onClick={async () => {
            if (deleting) return;
            setDeleting(true);
            const data = await fetch("/api/getResponse").then((res) =>
              res.json()
            );
            if (!data) {
              alert("Form is non-existant.");
            } else {
              await fetch("/api/delete")
                .then((res) => res.text())
                .then(() => {
                  alert("Form deleted.");
                })
                .catch(() => {
                  alert("Deleting form gave an error :(");
                });
            }
            setDeleting(false);
          }}
        >
          {deleting ? "Deleting..." : "Delete Form"}
        </Button>
      </div>
    </>
  );
}
